!=================================================================================================================================
! Copyright (c) 2010-2024  Prof. Claus-Dieter Munz
! This file is part of FLEXI, a high-order accurate framework for numerically solving PDEs with discontinuous Galerkin methods.
! For more information see https://www.flexi-project.org and https://nrg.iag.uni-stuttgart.de/
!
! FLEXI is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License
! as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.
!
! FLEXI is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty
! of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License v3.0 for more details.
!
! You should have received a copy of the GNU General Public License along with FLEXI. If not, see <http://www.gnu.org/licenses/>.
!=================================================================================================================================
!
!   This a parameter file for Flexi (https://flexi-project.org)
!
!   Usage: mpirun -np XX ./flexi thisparameterfile.ini or
!          ./flexi thisparameterfile.ini
!
!   Structure: Keyword = Value
!              Not case sensitive, order of keywords not important
!
!   ./flexi --help for a list of available settings
!
! =============================================================================== !
! OUTPUT
! =============================================================================== !
ProjectName      = Re590_turbulentChannel_RANS
Logging          = F
outputFormat     = 0                   ! =0, no visu, >0 visualize
Output2D         = F
DoPrintStatusLine = F
! =============================================================================== !
! INTERPOLATION
! =============================================================================== !
N                = 4                   ! Polynomial degree
NAnalyze         = 10                  ! Number of analyze points
NVisu            = 12
! =============================================================================== !
! OVERINTEGRATION (ADVECTION PART ONLY)
! =============================================================================== !
OverintegrationType = 0                ! 0:off 1:cut-off filter 2: conservative cut-off 3: advective
                                       ! flux only
NUnder            = 3                  ! specifies effective polydeg (modes > NUnder are thrown away)
                                       ! for types 1 and 2
! =============================================================================== !
! MESH
! =============================================================================== !
MeshFile         = CHANNEL_016_2D_mesh.h5
useCurveds       = F
! =============================================================================== !
! EQUATION
! =============================================================================== !
! Use the exact function provided by the testcase environment
IniExactFunc     = 0
IniRefState      = 1
RefState         = (/1.,1.,0.,0.,24862.6282973001,0.01/)
Mu0              = 1.69492e-3          ! viscosity set to 1/Re_tau
Riemann          = LF
! =============================================================================== !
! TIMEDISC
! =============================================================================== !
tend             = 5.0                 ! End time, time unit is viscous time: l/u_tau
CFLscale         = 0.9                 ! Scaling of theoretical CFL number
DFLscale         = 0.9                 ! Scaling of theoretical DFL number

! =============================================================================== !
! ANALYZE
! =============================================================================== !
Analyze_dt       = 5.0                 ! Timestep of analyze outputs
CalcErrorNorms   = F                   ! Calculate error norms
CalcBodyForces   = F                   ! Calculate body forces (BC 4/9)
CalcWallVelocity = F                   ! Calculate velocities at the walls (BC 4/9)
