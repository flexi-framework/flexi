# Load the base image
FROM fedora:41

# Numerics research group
LABEL maintainer="numerics@iag.uni-stuttgart.de"

# Disable weak dependencies
RUN echo 'install_weak_deps=False' >> /etc/dnf/dnf.conf

# Setup required packages
RUN dnf makecache             && \
    dnf update  -y            && \
    dnf install -y git-core cmake gcc-c++ gcc-gfortran mpich-devel zlib-ng-devel openblas-devel hdf5-devel hdf5-mpich-devel && \
    dnf install -y python3 uv && \
    dnf install -y doxygen    && \
    dnf install -y ruff       &&  `# Setup Ruff`      \
    dnf autoremove            && \
    dnf clean all             && \
    rm -rf /var/log/dnf5.*

# Set architecture argument
ARG ARCH

# Setup uv
ENV UV_LINK_MODE=copy

# Setup standard paths
ENV LD_LIBRARY_PATH="/usr/lib64"           \
    MANPATH="/usr/share/man"               \
    PKG_CONFIG_PATH="/usr/lib64/pkgconfig"

# Setup MPI
# RUN source /etc/profile && module load mpi
# > Each RUN command in a Dockerfile starts a new shell process, thus Docker
# > does not persist the shell state, including environment modifications
# > such as module load, across RUN commands.
ENV MPI_BIN=/usr/lib64/mpich/bin           \
    MPI_SYSCONFIG=/etc/mpich-${ARCH}       \
    MPI_FORTRAN_MOD_DIR=/usr/lib64/gfortran/modules/mpich          \
    MPI_INCLUDE=/usr/include/mpich-${ARCH} \
    MPI_LIB=/usr/lib64/mpich/lib           \
    MPI_MAN=/usr/share/man/mpich-${ARCH}   \
    MPI_PYTHON3_SITEARCH=/usr/lib64/python3.13/site-packages/mpich \
    MPI_COMPILER=mpich-${ARCH}             \
    MPI_SUFFIX=_mpich                      \
    MPI_HOME=/usr/lib64/mpich              \
    PATH="/usr/lib64/mpich/bin:${PATH}"    \
    LD_LIBRARY_PATH="/usr/lib64/mpich/lib:${LD_LIBRARY_PATH}"      \
    MANPATH="/usr/share/man/mpich-${ARCH}:${MANPATH}"              \
    PKG_CONFIG_PATH="/usr/lib64/mpich/lib/pkgconfig:${PKG_CONFIG_PATH}"

# Setup Fortitude
ENV PATH="/root/.local/bin:$PATH"
RUN dnf install -y cargo      && \
    uv tool install git+https://github.com/PlasmaFAIR/fortitude && \
    uv cache clean            && \
    rm -rf /root/.cargo       && \
    dnf remove  -y cargo      && \
    dnf autoremove            && \
    dnf clean all             && \
    rm -rf /var/log/dnf5.*
